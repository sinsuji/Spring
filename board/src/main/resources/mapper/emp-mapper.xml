<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.emp.mapper.EmpMapper">
	<sql id="condition">
		<where> 
			<if test="vo.departmentId != null">
				  department_id = #{vo.departmentId}
			</if>
			<if test="vo.firstName != null">
			  AND first_name = #{vo.firstName}
			</if>
			<if test="vo.managerId != null">
			  AND manager_id = #{vo.managerId}
			</if>
			<if test="svo.employeeIds != null">
			 AND employee_id
				<foreach collection="svo.employeeIds"
						 item = "empid"
						 open="in (" 
						 close=")" 
						 separator="," >
					#{empid}
				</foreach>	
			</if>
 		</where>
	</sql>
	<resultMap type="EmpVO" id="empResultMap">
		<id property="employeeId" column="employee_id"></id>
		<result property="firstName" column="first_name"/>
		<result property="phone" column="phone_number"/>
	</resultMap>
	
	<select id="getEmpList" resultType="EmpVO">
	SELECT * FROM ( SELECT rownum as rn, a.* FROM (	
		
		SELECT EMPLOYEE_ID
			   , FIRST_NAME
			   , LAST_NAME
			   , EMAIL
			   , PHONE_NUMBER
			   , HIRE_DATE
			   , JOB_ID
			   , SALARY
			   , COMMISSION_PCT
			   , MANAGER_ID
			   , DEPARTMENT_ID
			   , PHOTO 
		 FROM employees e 
		 <include refid="condition"></include>
 		ORDER BY employee_id desc
		 
	) a WHERE rownum <![CDATA[<=]]> #{svo.end} ) b WHERE rn >= #{svo.start} 
	</select>
	
	<select id="getEmpInfo"
			parameterType="int"
			resultType="EmpVO">
		SELECT *
		 FROM employees
		WHERE employee_id = #{employeeId} 
	</select>
	
	<insert id="insertEmp" parameterType="EmpVO">
		<selectKey keyProperty="employeeId"
				   order="BEFORE"
				   resultType="int">
			select employees_seq.nextval from dual
		</selectKey>
		INSERT INTO employees(EMPLOYEE_ID
							  , FIRST_NAME
							  , LAST_NAME
							  , EMAIL
							  , HIRE_DATE
							  , JOB_ID
							  <if test="salary != null">, SALARY</if>
							  , MANAGER_ID
							  , DEPARTMENT_ID
							  , PHOTO)
		VALUES (
				#{employeeId}
				, #{firstName}
				, #{lastName}
				, #{email}
			    , #{hireDate}
				, #{jobId}
				<if test="salary != null">, #{salary}</if>
				, #{managerId}
				, #{departmentId}
				, #{photo}
				)
	</insert>
	
	<delete id="deleteEmp">
		DELETE FROM employees
		WHERE employee_id = #{employeeId}
	</delete>
	
	<select id="getStat" resultType="map">
		SELECT e.department_id, 
			   d.department_name "name", 
			   count(*) "cnt"
		  FROM employees e JOIN departments d 
		    ON e.department_id = d.department_id
		 WHERE e.department_id IS NOT NULL
		 GROUP BY e.department_id, d.department_name
	</select>
	
	<update id="updateEmp">
		UPDATE employees
		SET email = #{email}
		WHERE employee_id = #{employeeId}
	</update>
</mapper>